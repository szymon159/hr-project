@using HR_Project.Enums
@using HR_Project.ExtensionMethods

@model ApplicationDetailsViewModel

<div class="application-property">
    <p class="application-property-label">First name:</p>
    @Html.TextBoxFor(modelItem => Model.ApplicationModel.FirstName, new { @readonly = "true", @placeholder = "First name", @class = "application-property-edit" })
</div>

<div class="application-property">
    <p class="application-property-label">Last name:</p>
    @Html.TextBoxFor(modelItem => Model.ApplicationModel.LastName, new { @readonly = "true", @placeholder = "Last name", @class = "application-property-edit" })
</div>

<div class="application-property">
    <p class="application-property-label">Email address:</p>
    @Html.TextBoxFor(modelItem => Model.ApplicationModel.Email, new { @readonly = "true", @placeholder = "Email address", @class = "application-property-edit" })
</div>

<div class="application-property">
    <p class="application-property-label">CV - file:</p>
    @if (User.IsInRole(UserRole.User))
    {
        @if (Model.ApplicationModel.IsCvUploaded)
        {
            <p class="application-property-sublabel green-text">(Already uploaded, choosing new file will replace old one)</p>
        }
        else
        {
            <p class="application-property-sublabel red-text">(CV is not uploaded - add it or you will not be able to Submit/Apply)</p>
        }
        @Html.TextBoxFor(modelItem => Model.ApplicationModel.CV, new { @type = "file", @readonly = "true", @class = "application-property-edit" })
    }
    else if (User.IsInRole(UserRole.HR)
        && Model.ApplicationModel.IsCvUploaded)
    {
        <ul class="application-property-edit">
            <li class="file-list-item">
                @Html.DisplayTextFor(modelItem => Model.ApplicationModel.UploadedCvPath)
                @Html.ActionLink("Download", "DownloadCv", "Application", new { id = Model.ApplicationModel.Id }, new { @class = "btn button download-file-button" })
            </li>
        </ul>
    }
</div>

<div class="application-property">
    <p class="application-property-label">Other attachments:</p>
    @if (User.IsInRole(UserRole.User))
    {
        @if (Model.ApplicationModel.IsAttachmentsUploaded)
        {
            <p class="application-property-sublabel green-text">(Already uploaded, selecting new file will replace all previously uploaded)</p>
        }
        @Html.TextBoxFor(modelItem => Model.ApplicationModel.OtherAttachments, new { @type = "file", @readonly = "true", @multiple = "true", @class = "application-property-edit" })
    }
    else if (User.IsInRole(UserRole.HR))
    {
        <ul class="application-property-edit">
            @foreach(var attachmentPath in Model.ApplicationModel.UploadedAttachmentPaths)
            {
                <li class="file-list-item">
                @Html.DisplayTextFor(modelItem => attachmentPath)
                @Html.ActionLink("Download", "DownloadAttachment", "Application", new { id = Model.ApplicationModel.Id, filePath = attachmentPath }, new { @class = "btn button download-file-button" })
                </li>
            }
        </ul>
    }
</div>

<div class="application-property">
    <p class="application-property-label">Message for recruiters (optional):</p>
    @if (Model.IsEditing == true)
    {
        @Html.TextAreaFor(modelItem => Model.ApplicationModel.Message, new { @placeholder = "Message for recruiters (optional)", @class = "application-property-edit application-property-textarea" })
    }
    else
    {
        @Html.TextAreaFor(modelItem => Model.ApplicationModel.Message, new { @readonly = "true", @placeholder = "Message for recruiters (optional)", @class = "application-property-edit application-property-textarea" })
    }
</div>
